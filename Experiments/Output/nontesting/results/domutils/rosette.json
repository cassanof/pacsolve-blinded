{
  "install-success": false,
  "error": {
    "stage": "install",
    "command": "npm install --rosette",
    "retcode": 1,
    "stdout": "0 / 1\nSending query to rosette: /var/folders/9x/h9vpkyxj3pg0chrllkhfpkzm0000gn/T/tmp-30564-XaKffRxRHUbj\nGot: /var/folders/9x/h9vpkyxj3pg0chrllkhfpkzm0000gn/T/tmp-30564-bCHzcaMRR4Y9\nDecoding Rosette answer: [object Object]\n\n> domutils@2.8.0 prepare\n> npm run build\n\n\n> domutils@2.8.0 build\n> tsc\n\nVersion 4.4.3\ntsc: The TypeScript Compiler - Version 4.4.3\n\nCOMMON COMMANDS\n\n  tsc\n  Compiles the current project (tsconfig.json in the working directory.)\n\n  tsc app.ts util.ts\n  Ignoring tsconfig.json, compiles the specified files with default compiler options.\n\n  tsc -b\n  Build a composite project in the working directory.\n\n  tsc --init\n  Creates a tsconfig.json with the recommended settings in the working directory.\n\n  tsc -p ./path/to/tsconfig.json\n  Compiles the TypeScript project located at the specified path.\n\n  tsc --help --all\n  An expanded version of this information, showing all possible compiler options\n\n  tsc --noEmit\n  tsc --target esnext\n  Compiles the current project, with additional settings.\n\nCOMMAND LINE FLAGS\n\n--help, -h\nPrint this message.\n\n--watch, -w\nWatch input files.\n\n--all\nShow all compiler options.\n\n--version, -v\nPrint the compiler's version.\n\n--init\nInitializes a TypeScript project and creates a tsconfig.json file.\n\n--project, -p\nCompile the project given the path to its configuration file, or to a folder with a 'tsconfig.json'.\n\n--build, -b\nBuild one or more projects and their dependencies, if out of date\n\n--showConfig\nPrint the final configuration instead of building.\n\nCOMMON COMPILER OPTIONS\n\n--pretty\nEnable color and formatting in TypeScript's output to make compiler errors easier to read\ntype: boolean\ndefault: true\n\n--target, -t\nSet the JavaScript language version for emitted JavaScript and include compatible library declarations.\none of: es3, es5, es6, es2015, es2016, es2017, es2018, es2019, es2020, es2021, esnext\ndefault: ES3\n\n--module, -m\nSpecify what module code is generated.\none of: none, commonjs, amd, system, umd, es6, es2015, es2020, esnext\n\n--lib\nSpecify a set of bundled library declaration files that describe the target runtime environment.\none or more: es5, es6, es2015, es7, es2016, es2017, es2018, es2019, es2020, es2021, esnext, dom, dom.iterable, webworker, webworker.importscripts, webworker.iterable, scripthost, es2015.core, es2015.collection, es2015.generator, es2015.iterable, es2015.promise, es2015.proxy, es2015.reflect, es2015.symbol, es2015.symbol.wellknown, es2016.array.include, es2017.object, es2017.sharedmemory, es2017.string, es2017.intl, es2017.typedarrays, es2018.asyncgenerator, es2018.asynciterable, es2018.intl, es2018.promise, es2018.regexp, es2019.array, es2019.object, es2019.string, es2019.symbol, es2020.bigint, es2020.promise, es2020.sharedmemory, es2020.string, es2020.symbol.wellknown, es2020.intl, es2021.promise, es2021.string, es2021.weakref, esnext.array, esnext.symbol, esnext.asynciterable, esnext.intl, esnext.bigint, esnext.string, esnext.promise, esnext.weakref\n\n--allowJs\nAllow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files.\ntype: boolean\ndefault: false\n\n--checkJs\nEnable error reporting in type-checked JavaScript files.\ntype: boolean\ndefault: false\n\n--jsx\nSpecify what JSX code is generated.\none of: preserve, react-native, react, react-jsx, react-jsxdev\ndefault: undefined\n\n--declaration, -d\nGenerate .d.ts files from TypeScript and JavaScript files in your project.\ntype: boolean\ndefault: `false`, unless `composite` is set\n\n--declarationMap\nCreate sourcemaps for d.ts files.\ntype: boolean\ndefault: false\n\n--emitDeclarationOnly\nOnly output d.ts files and not JavaScript files.\ntype: boolean\ndefault: false\n\n--sourceMap\nCreate source map files for emitted JavaScript files.\ntype: boolean\ndefault: false\n\n--outFile\nSpecify a file that bundles all outputs into one JavaScript file. If `declaration` is true, also designates a file that bundles all .d.ts output.\n\n--outDir\nSpecify an output folder for all emitted files.\n\n--removeComments\nDisable emitting comments.\ntype: boolean\ndefault: false\n\n--noEmit\nDisable emitting files from a compilation.\ntype: boolean\ndefault: false\n\n--strict\nEnable all strict type-checking options.\ntype: boolean\ndefault: false\n\n--types\nSpecify type package names to be included without being referenced in a source file.\n\n--esModuleInterop\nEmit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility.\ntype: boolean\ndefault: false\n\nYou can learn about all of the compiler options at https://aka.ms/tsconfig-reference\n\n",
    "stderr": "npm WARN EBADENGINE Unsupported engine {\nnpm WARN EBADENGINE   package: 'eslint-plugin-jsdoc@36.1.1',\nnpm WARN EBADENGINE   required: { node: '^12 || ^14 || ^16' },\nnpm WARN EBADENGINE   current: { node: 'v15.2.1', npm: '7.20.1' }\nnpm WARN EBADENGINE }\nnpm WARN EBADENGINE Unsupported engine {\nnpm WARN EBADENGINE   package: '@es-joy/jsdoccomment@0.10.8',\nnpm WARN EBADENGINE   required: { node: '^12 || ^14 || ^16' },\nnpm WARN EBADENGINE   current: { node: 'v15.2.1', npm: '7.20.1' }\nnpm WARN EBADENGINE }\nnpm ERR! code 1\nnpm ERR! path /Users/donaldpinckney/Research/packages/dependency-runner/Experiments/Output/nontesting/work/domutils/rosette/package\nnpm ERR! command failed\nnpm ERR! command sh -c npm run build\n\nnpm ERR! A complete log of this run can be found in:\nnpm ERR!     /Users/donaldpinckney/.npm/_logs/2021-10-12T05_18_32_223Z-debug.log\n"
  }
}